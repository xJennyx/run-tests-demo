name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: second_test
        type: choice
        options:
          - first_test
          - second_test

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Download previous Allure artifact
        run: |
          echo "Getting artifact ID..."
          ARTIFACT_INFO=$(curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/xJennyx/run-tests-demo/actions/artifacts")

          ARTIFACT_ID=$(echo "$ARTIFACT_INFO" | python3 -c "import sys, json; artifacts=json.load(sys.stdin).get('artifacts', []); print(next((a['id'] for a in artifacts if a['name'] == 'allure-results'), ''))")

          if [ -z "$ARTIFACT_ID" ]; then
            echo "❌ No previous 'allure-results' artifact found. Skipping download."
            touch skip.txt  # просто чтобы был какой-то файл
            exit 0
          fi

          echo "📦 Downloading artifact with ID $ARTIFACT_ID..."
          curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/xJennyx/run-tests-demo/actions/artifacts/$ARTIFACT_ID/zip" \
            -o artifacts.zip &&
          echo "Getting report ID..."
          REPORT_INFO=$(curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/xJennyx/run-tests-demo/actions/artifacts")

          REPORT_ID=$(echo "$REPORT_INFO" | python3 -c "import sys, json; artifacts=json.load(sys.stdin).get('artifacts', []); print(next((a['id'] for a in artifacts if a['name'] == 'github-pages'), ''))")

          if [ -z "$REPORT_ID" ]; then
            echo "❌ No previous 'github-pages' artifact found. Skipping download."
            touch skip.txt  # просто чтобы был какой-то файл
            exit 0
          fi

          echo "📦 Downloading artifact with ID $REPORT_ID..."
          curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/xJennyx/run-tests-demo/actions/artifacts/$ARTIFACT_ID/zip" \
            -o pages.zip

      - name: Extract history
        run: |
          if [ -f artifacts.zip ]; then
            echo "📂 Unzipping..."
            mkdir -p allure-results
            unzip -q artifacts.zip -d allure-results || echo "⚠️ Nothing to unzip"
          else
            echo "⚠️ artifacts.zip not found, skipping unzip"
            mkdir -p allure-results
          fi
          
      - name: Extract github pages
        run: |
          if [ -f pages.zip ]; then
            echo "📂 Unzipping..."
            mkdir -p old_pages
            unzip -q pages.zip -d old_pages || echo "⚠️ Nothing to unzip" && tar -xvf old_pages/artifact.tar -C pages_history
          else
            echo "⚠️ pages.zip not found, skipping unzip"
            mkdir -p old_pages
          fi
      - run: cp pages_history/history/* allure-results && cp pages_history/history allure-results

      - name: Upload history for next job
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1
              
  test:
    runs-on: ubuntu-latest
    needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg unzip
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Run first_test
        if: ${{ github.event.inputs.deployment_target == 'first_test' }}
        run: pytest tests/test_button.py::test_button_exist --alluredir=allure-results
      - name: Run second_test
        if: ${{ github.event.inputs.deployment_target == 'second_test' }}
        run: pytest tests/test_button.py::test_button_exist_2 --alluredir=allure-results
      - name: Upload allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1
          overwrite: true

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report

    steps:
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '21'

      - name: Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.33.0/allure-2.33.0.tgz
          sudo tar -zxvf allure-2.33.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.33.0/bin/allure /usr/bin/allure

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Generate Allure Report
        run: allure generate allure-results -o _site --clean

      - name: Upload generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication

    steps:
      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: _site
          path: _site
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
